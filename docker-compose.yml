services:
  postgres:
    image: postgis/postgis
    container_name: postgis
    env_file: .env
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - postgis_data:/var/lib/postgresql/data
    networks:
      - default

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file: .env
    restart: unless-stopped
    user: "${UID}:${GID}"
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - default

  app-production:
    container_name: nestjs-app-production
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.production
    profiles:
      - production
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    networks:
      - default

  app-development:
    container_name: nestjs-app-development
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.development
    env_file:
      - .env
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    profiles:
      - development
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - default

  nominatim:
    image: mediagis/nominatim:4.4
    container_name: nominatim
    ports:
      - "8000:8000"
    env_file: .env
    volumes:
      - nominatim_data:/var/lib/postgresql/12/main
      - nominatim_osm_data:/var/lib/nominatim
    depends_on:
      - postgres
    networks:
      - default

  ngrok:
    image: wernight/ngrok
    container_name: ngrok
    restart: unless-stopped
    volumes:
      - ./ngrok.yml:/home/ngrok/.ngrok2/ngrok.yml
    ports:
      - "4040:4040"
    depends_on:
      - postgres
    command: [ "ngrok", "start", "--config", "/home/ngrok/.ngrok2/ngrok.yml", "http1", "http2" ]
    networks:
      - default

volumes:
  postgis_data:
  pgadmin_data:
  node_modules:
  nominatim_data:
  nominatim_osm_data:

networks:
  default: