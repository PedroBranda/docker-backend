services:
  postgres:
    image: postgis/postgis
    container_name: postgis_container
    env_file: .env
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - default
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    env_file: .env
    restart: unless-stopped
    user: "${UID}:${GID}"
    ports:
      - '5050:80'
    volumes:
      - data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - default
#  app:
#    container_name: nestjs-app
#    build: .
#    restart: unless-stopped
#    ports:
#      - '3000:3000'
#    depends_on:
#      - postgres
  app-development:
    container_name: nestjs-app-development
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile.development
    env_file:
      - .env
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    profiles:
      - development
    ports:
      - "3000:3000"
    depends_on:
      - postgres
#  nominatim:
#    image: mediagis/nominatim
#    container_name: nominatim_container
#    env_file: .env
#    ports:
#      - '8080:8080'
#    command: sh /app/init.sh
  ngrok:
    image: wernight/ngrok
    restart: unless-stopped
    volumes:
      - ./ngrok.yml:/home/ngrok/.ngrok2/ngrok.yml
    ports:
      - "4040:4040"
    depends_on:
      - postgres
    command: [ "ngrok", "http", "host.docker.internal:3000" ]
    networks:
      - default
volumes:
  data:
  node_modules:
networks:
  default: